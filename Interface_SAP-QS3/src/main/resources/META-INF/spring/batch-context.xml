<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<description>Specification Jobs.</description>
	<import resource="classpath:/META-INF/spring/mail-context.xml" />
	
<!-- ############################# ORDEN CREATION INPUT ############################## -->

	<batch:job id="jobOrdenCreationInput">
		<batch:step id="stepOrdenCreationInput">
			<batch:tasklet transaction-manager="transactionManager" start-limit="100">
				<batch:chunk reader="readerOrdenCreationInput" writer="writerOrdenCreationInput" commit-interval="1" >
					<batch:listeners>
						<batch:listener ref="listenerChunk" />
					</batch:listeners>
				</batch:chunk>
			</batch:tasklet>
			<batch:end on="*"/>
			<batch:next on="EXCEPTION DB" to="sendMailStep"/>
		</batch:step>
		<batch:step id="sendMailStep">
			<batch:tasklet ref="sendMailConnectionDB" />
		</batch:step>
	</batch:job>
	
	<bean id="listenerChunk" class="com.danone.bonafont.batch.listener.ChunkErrorListener"/>

	<bean id="readerOrdenCreationInput" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="step">
		<property name="resources" value="file:C:/interface_sap-qs3/data/in/new/MX2_OrderCR*" />
		<property name="delegate" ref="fileReaderOrdenCreationInput" />
		<property name="strict" value="false"/>
	</bean>

	<bean id="fileReaderOrdenCreationInput" class="com.danone.bonafont.batch.reader.FlatFileReaderSapOrden" scope="step">
		<property name="strict" value="false"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=";"/> 
						<property name="names" value="ch_origen,ch_orden_compra,ch_foliopedido,ch_destino,ch_pedfecha,ch_pedfechaemb,ch_pedfechaent,ch_observa,ch_producto,ch_cantidad,ch_fechaembarque,ch_cajas,ch_ocedi,ch_cubicuadre,ch_pedidos3,dummy,dummy,dummy,dummy,dummy,dummy,ch_occamion,dummy,ch_tipopedido,ch_orgventas,ch_canaldist,ch_division,nu_posicionitem,ch_procedencia,ch_razonpedido" /> 
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="ordenDTOPrototype" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="ordenDTOPrototype" scope="prototype" class="com.danone.bonafont.batch.model.SapOrden" />
	
	<bean id="writerOrdenCreationInput"
		class="com.danone.bonafont.batch.writer.JdbcWriterSapOrden" scope="step">
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
           	<![CDATA[        
		    INSERT INTO dbo.QS_TBL_SAP_ORDEN 
		    	(ch_orden_compra, nu_id_estatus, da_registro, nu_id_archivo, da_proceso, ch_origen, ch_foliopedido, ch_destino, ch_ciudescrip, ch_pedfecha, ch_pedfechaemb, ch_pedfechaent, ch_observa, ch_producto, ch_cantidad, ch_fechaembarque, ch_cajas, ch_ocedi, ch_cubicuadre, ch_pedidos3, ch_occamion, ch_tipopedido, ch_orgventas, ch_canaldist, ch_division, nu_posicionitem, ch_procedencia, ch_razonpedido)
		    	VALUES (:ch_orden_compra, :nu_id_estatus, SYSDATETIME(), :nu_id_archivo, :da_proceso, :ch_origen, :ch_foliopedido, :ch_destino, :ch_ciudescrip, :ch_pedfecha, :ch_pedfechaemb, :ch_pedfechaent, :ch_observa, :ch_producto, :ch_cantidad, :ch_fechaembarque, :ch_cajas, :ch_ocedi, :ch_cubicuadre, :ch_pedidos3, :ch_occamion, :ch_tipopedido, :ch_orgventas, :ch_canaldist, :ch_division, :nu_posicionitem, :ch_procedencia, :ch_razonpedido)
           	]]>
			</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
<!-- ############################# FIN ORDEN CREATION INPUT ############################# -->	

<!-- ############################# ORDEN CANCELLATION INPUT ############################# -->

	<batch:job id="jobOrdenCancellationInput">
		<batch:step id="stepOrdenCancellationInput">
			<batch:tasklet transaction-manager="transactionManager" start-limit="100">
				<batch:chunk reader="readerOrdenCancellationInput" writer="writerOrdenCancellationInput" commit-interval="1" />
			</batch:tasklet>
			<batch:listeners>
				<batch:listener ref="listenerChunk"/>
			</batch:listeners>
		</batch:step>
	</batch:job>
	
	<bean id="readerOrdenCancellationInput" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="step">
		<property name="resources" value="file:C:/interface_sap-qs3/data/in/new/MX2_OrderCN*" />
		<property name="delegate" ref="fileReaderOrdenCancellationInput" />
		<property name="strict" value="false"/>
	</bean>

	<bean id="fileReaderOrdenCancellationInput" class="com.danone.bonafont.batch.reader.FlatFileReaderSapOrdenCan" scope="step">
		<property name="strict" value="false"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=";"/> 
						<property name="names" value="ch_origen,ch_orden_compra,ch_foliopedido,ch_destino,ch_ciudescrip,ch_pedfecha,ch_pedfechaemb,ch_pedfechent,ch_observa,ch_producto,ch_cantidad,ch_fechaembarque,ch_cajas,ch_ocedi,ch_cubicuadre,ch_pedidos3,dummy,dummy,dummy,dummy,dummy,dummy,ch_occamion,dummy,ch_tipopedido,ch_orgventas,ch_canaldist,ch_division,nu_posicionitem,ch_procedencia,ch_razonpedido,ch_estadopedido" /> 
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="ordenCanDTOPrototype" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="ordenCanDTOPrototype" scope="prototype" class="com.danone.bonafont.batch.model.SapOrdenCan" />
	
	<bean id="writerOrdenCancellationInput"
		class="com.danone.bonafont.batch.writer.JdbcWriterSapOrdenCan" scope="step">
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
           	<![CDATA[        
		    INSERT INTO dbo.QS_TBL_SAP_ORDEN_CAN
    			(ch_orden_compra, nu_id_estatus, da_registro, nu_id_archivo, da_proceso, ch_origen, ch_foliopedido, ch_destino, ch_ciudescrip, ch_pedfecha, ch_pedfechaemb, ch_pedfechent, ch_observa, ch_producto, ch_cantidad, ch_fechaembarque, ch_cajas, ch_ocedi, ch_cubicuadre, ch_pedidos3, ch_occamion, ch_tipopedido, ch_orgventas, ch_canaldist, ch_division, nu_posicionitem, ch_procedencia, ch_razonpedido, ch_estadopedido)
    			VALUES(:ch_orden_compra, :nu_id_estatus, SYSDATETIME(), :nu_id_archivo, :da_proceso, :ch_origen, :ch_foliopedido, :ch_destino, :ch_ciudescrip, :ch_pedfecha, :ch_pedfechaemb, :ch_pedfechent, :ch_observa, :ch_producto, :ch_cantidad, :ch_fechaembarque, :ch_cajas, :ch_ocedi, :ch_cubicuadre, :ch_pedidos3, :ch_occamion, :ch_tipopedido, :ch_orgventas, :ch_canaldist, :ch_division, :nu_posicionitem, :ch_procedencia, :ch_razonpedido, :ch_estadopedido)
           	]]>
			</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
<!-- ######################## FIN ORDEN CANCELLATION INPUT ########################### -->	

<!-- ################################ DELIVERY INPUT ################################# -->

	<batch:job id="jobDeliveryInput">
		<batch:step id="stepDeliveryInput">
			<batch:tasklet transaction-manager="transactionManager" start-limit="100">
				<batch:chunk reader="readerDeliveryInput" writer="writerDeliveryInput" commit-interval="1" />
			</batch:tasklet>
			<batch:listeners>
				<batch:listener ref="listenerChunk"/>
			</batch:listeners>
		</batch:step>
	</batch:job>
	
	<bean id="readerDeliveryInput" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="step">
		<property name="resources" value="file:C:/interface_sap-qs3/data/in/new/MX2_Deliveries*" />
		<property name="delegate" ref="fileReaderDeliveryInput" />
		<property name="strict" value="false"/>
	</bean>

	<bean id="fileReaderDeliveryInput" class="com.danone.bonafont.batch.reader.FlatFileReaderSapEntrega" scope="step">
		<property name="strict" value="false"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=";"/> 
						<property name="names" value="ch_origen,ch_seriepedido,ch_foliopedido,ch_destino,ch_pedfecha,ch_pedfechaemb,ch_pedfechaent,ch_estadopedido,ch_observa,ch_producto,ch_cantidad,ch_fechaembarque,ch_ocedi,dummy,dummy,dummy,dummy,dummy,da_avisos,ch_comentario,dummy,ch_occamion,ch_proveedoredi,ch_tipopedido,ch_orgventas,ch_numeroalmacen,ch_ruta,ch_peso_neto,ch_receproducto,ch_numeropieza,dummy,ch_numerolote,ch_material_cliente,ch_calidad,ch_fecha_transito" /> 
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="deliveryDTOPrototype" />
						<property name="customEditors">
							<map>
								<entry key="java.util.Date">
									<ref local="dateEditor" />
								</entry>
							</map>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="deliveryDTOPrototype" scope="prototype" class="com.danone.bonafont.batch.model.SapEntrega" />

	<bean id="dateEditor" class="org.springframework.beans.propertyeditors.CustomDateEditor">
		<constructor-arg>
			<bean class="java.text.SimpleDateFormat">
				<constructor-arg value="dd/MM/yyyy" />
			</bean>
		</constructor-arg>
		<constructor-arg value="true" />
	</bean>
	
	<bean id="writerDeliveryInput"
		class="com.danone.bonafont.batch.writer.JdbcWriterSapEntrega" scope="step">
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
           	<![CDATA[        
			INSERT INTO dbo.QS_TBL_SAP_ENTREGA
    			(nu_id_estatus, da_registro, nu_id_archivo, da_proceso, ch_origen, ch_seriepedido, ch_foliopedido, ch_destino, ch_pedfecha, ch_pedfechaemb, ch_pedfechaent, ch_estadopedido, ch_observa, ch_producto, ch_cantidad, ch_fechaembarque, ch_ocedi, da_avisos, ch_comentario, ch_occamion, ch_proveedoredi, ch_tipopedido, ch_orgventas, ch_numeroalmacen, ch_ruta, ch_peso_neto, ch_receproducto, ch_numeropieza, ch_numerolote, ch_material_cliente, ch_calidad, ch_fecha_transito)
    			VALUES(:nu_id_estatus, SYSDATETIME(), :nu_id_archivo, :da_proceso, :ch_origen, :ch_seriepedido, :ch_foliopedido, :ch_destino, :ch_pedfecha, :ch_pedfechaemb, :ch_pedfechaent, :ch_estadopedido, :ch_observa, :ch_producto, :ch_cantidad, :ch_fechaembarque, :ch_ocedi, :da_avisos, :ch_comentario, :ch_occamion, :ch_proveedoredi, :ch_tipopedido, :ch_orgventas, :ch_numeroalmacen, :ch_ruta, :ch_peso_neto, :ch_receproducto, :ch_numeropieza, :ch_numerolote, :ch_material_cliente, :ch_calidad, :ch_fecha_transito)
           	]]>
			</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
<!-- ############################ FIN DELIVERY INPUT ################################# -->	

<!-- ############################### INVENTORY INPUT ################################# -->

	<batch:job id="jobInventoryInput">
		<batch:step id="stepInventoryInput">
			<batch:tasklet transaction-manager="transactionManager" start-limit="100">
				<batch:chunk reader="readerInventoryInput" writer="writerInventoryInput" commit-interval="1" />
			</batch:tasklet>
			<batch:listeners>
				<batch:listener ref="listenerChunk"/>
			</batch:listeners>
		</batch:step>
	</batch:job>
	
	<bean id="readerInventoryInput" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="step">
		<property name="resources" value="file:C:/interface_sap-qs3/data/in/new/MX2_Inventory*" />
		<property name="delegate" ref="fileReaderInventoryInput" />
		<property name="strict" value="false"/>
	</bean>

	<bean id="fileReaderInventoryInput" class="com.danone.bonafont.batch.reader.FlatFileReaderSapInventario" scope="step">
		<property name="strict" value="false"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=";"/> 
						<property name="names" value="ch_distribuidora,ch_almacen,ch_producto,ch_lote,ch_edodesc,nu_existencia,dummy,dummy,dummy,da_fechaprod" /> 
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="inventoryDTOPrototype" />
						<property name="customEditors">
							<map>
								<entry key="java.util.Date">
									<ref local="dateEditor" />
								</entry>
							</map>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="inventoryDTOPrototype" scope="prototype" class="com.danone.bonafont.batch.model.SapInventario" />
	
	<bean id="writerInventoryInput"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
           	<![CDATA[        
			INSERT INTO dbo.QS_TBL_SAP_INVENTARIO
    			(nu_id_estatus, nu_id_archivo, ch_distribuidora, ch_almacen, ch_producto, da_registro, da_proceso, ch_lote, ch_edodesc, nu_existencia, da_fechaprod, ch_tipo_material)
    			VALUES(2001, :nu_id_archivo, :ch_distribuidora, :ch_almacen, :ch_producto, SYSDATETIME(), :da_proceso, :ch_lote, :ch_edodesc, :nu_existencia, :da_fechaprod, :ch_tipo_material)
           	]]>
			</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
<!-- ########################### FIN INVENTORY INPUT ################################# -->	

<!-- ############################# ORDEN CREATION OUTPUT ############################# -->

	<batch:job id="jobOrdenCreationOutput">
		<batch:step id="stepOrdenCreationOutput">
			<batch:tasklet>
				<batch:chunk reader="readerOrdenCreationOutput" writer="writerOrdenCreationOutput" commit-interval="1000" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="readerOrdenCreationOutput"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
				<![CDATA[
				SELECT * FROM dbo.QS_TBL_QS3_ORDEN WHERE nu_id_estatus = 2005 and ch_orgventas = '#{jobParameters[orgventas]}'
				]]>
			</value>
		</property>
		<property name="rowMapper">
			<bean id="ordenCreationOutputMapper" class="org.springframework.jdbc.core.BeanPropertyRowMapper">
				<property name="mappedClass">
					<value type="java.lang.Class">com.danone.bonafont.batch.model.Qs3Orden</value>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="writerOrdenCreationOutput" class="com.danone.bonafont.batch.writer.FlatFileMultiWriterQs3Orden" scope="step">
		<property name="resource" value="file:#{jobParameters[pathout]}#{jobParameters[file]}" />
		<property name="saveState" value="true"/>
		<property name="delegate" ref="fileWriterOrdenCreationOutput"/>
		<property name="resourceSuffixCreator" ref="dateResourceSuffix"/>
	</bean>
	
	<bean id="dateResourceSuffix" class="com.danone.bonafont.batch.util.DateResourceSuffix"/>
	
	<bean id="fileWriterOrdenCreationOutput" class="com.danone.bonafont.batch.writer.FlatFileIWriterQs3Orden" scope="step">
		<property name="shouldDeleteIfEmpty" value="true"/>
		<!--property name="resource" value="file:C:/interface_QS3_SAP/data/out/orderCreation/new/MX2QS3_orderCreation#{T(com.danone.bonafont.batch.util.Util).getDate()}.csv" /-->
		<property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=";" />
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                    <property name="names" value="ch_tipopedido,ch_orgventas,ch_canaldist,ch_division,ch_destino,ch_pedfecha,ch_pedfechaemb,ch_pedfechaent,ch_producto,ch_cantidad,ch_origen,ch_almacen,ch_foliopedido,ch_estadopedido,ch_observa,ch_ocedi,ch_cubicuadre,ch_pedidos3,dummy,dummy,dummy,ch_occamion,ch_pedtipo,nu_prioridad,ch_razonpedido"/>
                    </bean>
                </property>
            </bean>
        </property>
	</bean>
<!-- ######################### FIN ORDEN CREATION OUTPUT ############################# -->
	
<!-- ##################### ORDEN CREATION CANCELLATION OUTPUT ######################## -->

	<batch:job id="jobOrdenCreationCanOutput">
		<batch:step id="stepOrdenCreationCanOutput">
			<batch:tasklet>
				<batch:chunk reader="readerOrdenCreationCanOutput" writer="writerOrdenCreationCanOutput" commit-interval="1000" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="readerOrdenCreationCanOutput"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
				<![CDATA[
				SELECT * FROM dbo.QS_TBL_QS3_ORDEN_CAN WHERE nu_id_estatus = 2005 and ch_orgventas = '#{jobParameters[orgventas]}'
				]]>
			</value>
		</property>
		<property name="rowMapper">
			<bean id="ordenCreationCanOutputMapper" class="org.springframework.jdbc.core.BeanPropertyRowMapper">
				<property name="mappedClass">
					<value type="java.lang.Class">com.danone.bonafont.batch.model.Qs3OrdenCan</value>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="writerOrdenCreationCanOutput" class="com.danone.bonafont.batch.writer.FlatFileMultiWriterQs3OrdenCan" scope="step">
		<property name="resource" value="file:#{jobParameters[pathout]}#{jobParameters[file]}" />
		<property name="saveState" value="true"/>
		<property name="delegate" ref="fileWriterOrdenCreationCanOutput"/>
		<property name="resourceSuffixCreator" ref="dateResourceSuffix"/>
	</bean>
	
	<bean id="fileWriterOrdenCreationCanOutput" class="com.danone.bonafont.batch.writer.FlatFileIWriterQs3OrdenCan" scope="step">
		<property name="shouldDeleteIfEmpty" value="true"/>
		<property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=";" />
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                    <property name="names" value="ch_foliopedido, ch_orgventas, ch_canaldist, ch_division, ch_producto, ch_razonrechazo, nu_posicionitem, ch_cantidad"/>
                    </bean>
                </property>
            </bean>
        </property>
	</bean>
<!-- ################# FIN ORDEN CREATION CANCELLATION OUTPUT ######################## -->

<!-- ################################ STO OUTPUT ##################################### -->

	<batch:job id="jobStoOutput">
		<batch:step id="stepStoOutput">
			<batch:tasklet>
				<batch:chunk reader="readerStoOutput" writer="writerStoOutput" commit-interval="1000" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="readerStoOutput"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
				<![CDATA[
				SELECT * FROM dbo.QS_TBL_QS3_STO WHERE nu_id_estatus = 2005 and ch_orgventas = '#{jobParameters[orgventas]}'
				]]>
			</value>
		</property>
		<property name="rowMapper">
			<bean id="stoOutputMapper" class="org.springframework.jdbc.core.BeanPropertyRowMapper">
				<property name="mappedClass">
					<value type="java.lang.Class">com.danone.bonafont.batch.model.Qs3STO</value>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="writerStoOutput" class="com.danone.bonafont.batch.writer.FlatFileIWriterQs3Sto" scope="step">
		<property name="shouldDeleteIfEmpty" value="true"/>
		<property name="resource" value="file:#{jobParameters[pathout]}#{jobParameters[file]}#{T(com.danone.bonafont.batch.util.Util).getDate()}.csv" />
		<property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=";" />
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                    <property name="names" value="ch_codecomp, ch_tipopedido, ch_idioma, ch_orgventas, ch_pedidos3, ch_origen, ch_cubicuadre, ch_estadopedido, ch_producto, ch_destino, ch_almacen, ch_cantidad, ch_ordenunidad, ch_lote, nu_posicionitem, ch_numerolinea, ch_pedfechaemb"/>
                    </bean>
                </property>
            </bean>
        </property>
	</bean>
<!-- ############################ FIN STO OUTPUT ##################################### -->
	
<!-- ############################# SEMAFORO SAP ###################################### -->

	<batch:job id="jobSemaforoSap">
		<batch:step id="stepSemaforoSap">
			<batch:tasklet>
				<batch:chunk reader="readerSemaforoSap" processor="processorSemaforoSap" writer="writerSemaforoSap" commit-interval="1000" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="processorSemaforoSap" class="com.danone.bonafont.batch.processor.SemaforoProcessor"/>
	
	<bean id="readerSemaforoSap"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
				<![CDATA[
				SELECT TOP(1)* FROM dbo.QS_TBL_ARCHIVOS WHERE nu_id_tipo IN(1, 2, 3, 4) ORDER BY da_registro DESC
				]]>
			</value>
		</property>
		<property name="rowMapper">
			<bean id="SemaforoSapMapper" class="org.springframework.jdbc.core.BeanPropertyRowMapper">
				<property name="mappedClass">
					<value type="java.lang.Class">com.danone.bonafont.batch.model.Archivo</value>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="writerSemaforoSap" 
		class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
           	<![CDATA[        
			UPDATE QS_TBL_SEMAFORO SET nu_estatus = :nu_estatus, ch_descripcion = :ch_descripcion, da_fecha = :da_fecha where ch_entidad = 'Sap Lectura'
           	]]>
			</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	
<!-- ########################### FIN SEMAFORO SAP #################################### -->

</beans>
